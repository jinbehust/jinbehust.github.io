{"version":3,"sources":["./src/app/users/list.component.ts","./src/app/users/list.component.html","./src/app/users/users-routing.module.ts","./src/app/users/add-edit.component.ts","./src/app/users/add-edit.component.html","./src/app/users/layout.component.ts","./src/app/users/layout.component.html","./src/app/users/users.module.ts"],"names":[],"mappings":"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","file":"users-users-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { UserService } from '@app/_services';\nimport { User } from '@app/_models';\n\n@Component({ templateUrl: 'list.component.html' })\nexport class ListComponent implements OnInit {\n  users!: User[];\n\n  constructor(private userService: UserService) {}\n\n  ngOnInit() {\n    this.userService\n      .getAll()\n      .pipe(first())\n      .subscribe((users) => (this.users = users));\n  }\n\n  deleteUser(id: string) {\n    const user = this.users.find((x) => x.id === id);\n    if (!user) return;\n    user.isDeleting = true;\n    this.userService\n      .delete(id)\n      .pipe(first())\n      .subscribe(() => (this.users = this.users.filter((x) => x.id !== id)));\n  }\n}\n","<h1>Users</h1>\n<a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Add User</a>\n<table class=\"table table-striped\">\n  <thead>\n    <tr>\n      <th style=\"width: 30%\">Name</th>\n      <th style=\"width: 30%\">Email</th>\n      <th style=\"width: 30%\">Role</th>\n      <th style=\"width: 10%\"></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let user of users\">\n      <td>{{ user.title }} {{ user.firstName }} {{ user.lastName }}</td>\n      <td>{{ user.email }}</td>\n      <td>{{ user.role }}</td>\n      <td style=\"white-space: nowrap\">\n        <a routerLink=\"edit/{{ user.id }}\" class=\"btn btn-sm btn-primary mr-1\"\n          >Edit</a\n        >\n        <button\n          (click)=\"deleteUser(user.id)\"\n          class=\"btn btn-sm btn-danger btn-delete-user\"\n          [disabled]=\"user.isDeleting\"\n        >\n          <span\n            *ngIf=\"user.isDeleting\"\n            class=\"spinner-border spinner-border-sm\"\n          ></span>\n          <span *ngIf=\"!user.isDeleting\">Delete</span>\n        </button>\n      </td>\n    </tr>\n    <tr *ngIf=\"!users\">\n      <td colspan=\"4\" class=\"text-center\">\n        <span class=\"spinner-border spinner-border-lg align-center\"></span>\n      </td>\n    </tr>\n  </tbody>\n</table>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutComponent } from './layout.component';\nimport { ListComponent } from './list.component';\nimport { AddEditComponent } from './add-edit.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutComponent,\n    children: [\n      { path: '', component: ListComponent },\n      { path: 'add', component: AddEditComponent },\n      { path: 'edit/:id', component: AddEditComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UsersRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {\n  AbstractControlOptions,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { UserService, AlertService } from '@app/_services';\nimport { MustMatch } from '@app/_helpers';\n\n@Component({ templateUrl: 'add-edit.component.html' })\nexport class AddEditComponent implements OnInit {\n  form!: FormGroup;\n  id!: string;\n  isAddMode!: boolean;\n  loading = false;\n  submitted = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private userService: UserService,\n    private alertService: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.isAddMode = !this.id;\n\n    // password not required in edit mode\n    const passwordValidators = [Validators.minLength(6)];\n    if (this.isAddMode) {\n      passwordValidators.push(Validators.required);\n    }\n\n    const formOptions: AbstractControlOptions = {\n      validators: MustMatch('password', 'confirmPassword'),\n    };\n    this.form = this.formBuilder.group(\n      {\n        title: ['', Validators.required],\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        role: ['', Validators.required],\n        password: [\n          '',\n          [\n            Validators.minLength(6),\n            this.isAddMode ? Validators.required : Validators.nullValidator,\n          ],\n        ],\n        confirmPassword: [\n          '',\n          this.isAddMode ? Validators.required : Validators.nullValidator,\n        ],\n      },\n      formOptions\n    );\n\n    if (!this.isAddMode) {\n      this.userService\n        .getById(this.id)\n        .pipe(first())\n        .subscribe((x) => this.form.patchValue(x));\n    }\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // reset alerts on submit\n    this.alertService.clear();\n\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    if (this.isAddMode) {\n      this.createUser();\n    } else {\n      this.updateUser();\n    }\n  }\n\n  private createUser() {\n    this.userService\n      .create(this.form.value)\n      .pipe(first())\n      .subscribe(() => {\n        this.alertService.success('User added', { keepAfterRouteChange: true });\n        this.router.navigate(['../'], { relativeTo: this.route });\n      })\n      .add(() => (this.loading = false));\n  }\n\n  private updateUser() {\n    this.userService\n      .update(this.id, this.form.value)\n      .pipe(first())\n      .subscribe(() => {\n        this.alertService.success('User updated', {\n          keepAfterRouteChange: true,\n        });\n        this.router.navigate(['../../'], { relativeTo: this.route });\n      })\n      .add(() => (this.loading = false));\n  }\n}\n","<h1 *ngIf=\"isAddMode\">Add User</h1>\n<h1 *ngIf=\"!isAddMode\">Edit User</h1>\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-row\">\n    <div class=\"form-group col\">\n      <label>Title</label>\n      <select\n        formControlName=\"title\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\"\n      >\n        <option value=\"\"></option>\n        <option value=\"Mr\">Mr</option>\n        <option value=\"Mrs\">Mrs</option>\n        <option value=\"Miss\">Miss</option>\n        <option value=\"Ms\">Ms</option>\n      </select>\n      <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.title.errors.required\">Title is required</div>\n      </div>\n    </div>\n    <div class=\"form-group col-5\">\n      <label>First Name</label>\n      <input\n        type=\"text\"\n        formControlName=\"firstName\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\"\n      />\n      <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n      </div>\n    </div>\n    <div class=\"form-group col-5\">\n      <label>Last Name</label>\n      <input\n        type=\"text\"\n        formControlName=\"lastName\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\"\n      />\n      <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-row\">\n    <div class=\"form-group col-7\">\n      <label>Email</label>\n      <input\n        type=\"text\"\n        formControlName=\"email\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n      />\n      <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.email.errors.required\">Email is required</div>\n        <div *ngIf=\"f.email.errors.email\">\n          Email must be a valid email address\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group col\">\n      <label>Role</label>\n      <select\n        formControlName=\"role\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': submitted && f.role.errors }\"\n      >\n        <option value=\"\"></option>\n        <option value=\"User\">User</option>\n        <option value=\"Admin\">Admin</option>\n      </select>\n      <div *ngIf=\"submitted && f.role.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.role.errors.required\">Role is required</div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"!isAddMode\">\n    <h3 class=\"pt-3\">Change Password</h3>\n    <p>Leave blank to keep the same password</p>\n  </div>\n  <div class=\"form-row\">\n    <div class=\"form-group col\">\n      <label>Password</label>\n      <input\n        type=\"password\"\n        formControlName=\"password\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n      />\n      <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.password.errors.required\">Password is required</div>\n        <div *ngIf=\"f.password.errors.minlength\">\n          Password must be at least 6 characters\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group col\">\n      <label>Confirm Password</label>\n      <input\n        type=\"password\"\n        formControlName=\"confirmPassword\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\"\n      />\n      <div\n        *ngIf=\"submitted && f.confirmPassword.errors\"\n        class=\"invalid-feedback\"\n      >\n        <div *ngIf=\"f.confirmPassword.errors.required\">\n          Confirm Password is required\n        </div>\n        <div *ngIf=\"f.confirmPassword.errors.mustMatch\">\n          Passwords must match\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <button [disabled]=\"loading\" class=\"btn btn-primary\">\n      <span\n        *ngIf=\"loading\"\n        class=\"spinner-border spinner-border-sm mr-1\"\n      ></span>\n      Save\n    </button>\n    <a routerLink=\"/users\" class=\"btn btn-link\">Cancel</a>\n  </div>\n</form>\n","import { Component } from '@angular/core';\n\n@Component({ templateUrl: 'layout.component.html' })\nexport class LayoutComponent {}\n","<div class=\"p-4\">\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { UsersRoutingModule } from './users-routing.module';\nimport { LayoutComponent } from './layout.component';\nimport { ListComponent } from './list.component';\nimport { AddEditComponent } from './add-edit.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, UsersRoutingModule],\n  declarations: [LayoutComponent, ListComponent, AddEditComponent],\n})\nexport class UsersModule {}\n"],"sourceRoot":"webpack:///"}